get_instruction_facts()
{'isa': 'DescriptionInstruction', 'asString': 'screen(screen)', 'reasoningStep': 0, 'preCondition': [], 'postCondition': [{'asString': 'screen(screen)', 'name': 'screen', 'arity': 1, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'screen', 'isa': 'Item'}]}]}
{'isa': 'DescriptionInstruction', 'asString': 'subject(subject)', 'reasoningStep': 0, 'preCondition': [], 'postCondition': [{'asString': 'subject(subject)', 'name': 'subject', 'arity': 1, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'subject', 'isa': 'Item'}]}]}
{'isa': 'DescriptionInstruction', 'asString': 'be(space_bar,in(psychomotor-vigilance))', 'reasoningStep': 0, 'preCondition': [], 'postCondition': [{'asString': 'be(space_bar,in(psychomotor-vigilance))', 'name': 'be', 'arity': 2, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'space_bar', 'isa': 'Item'}, {'asString': 'in(psychomotor-vigilance)', 'name': 'in', 'isa': 'Function', 'ofItem': [{'asString': 'psychomotor-vigilance', 'isa': 'Item'}]}]}]}
{'isa': 'DescriptionInstruction', 'asString': 'button(space_bar)', 'reasoningStep': 0, 'preCondition': [], 'postCondition': [{'asString': 'button(space_bar)', 'name': 'button', 'arity': 1, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'space_bar', 'isa': 'Item'}]}]}
{'isa': 'DescriptionInstruction', 'asString': 'be(screen,in(psychomotor-vigilance))', 'reasoningStep': 0, 'preCondition': [], 'postCondition': [{'asString': 'be(screen,in(psychomotor-vigilance))', 'name': 'be', 'arity': 2, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'screen', 'isa': 'Item'}, {'asString': 'in(psychomotor-vigilance)', 'name': 'in', 'isa': 'Function', 'ofItem': [{'asString': 'psychomotor-vigilance', 'isa': 'Item'}]}]}]}
{'isa': 'DescriptionInstruction', 'asString': 'task(psychomotor-vigilance)', 'reasoningStep': 0, 'preCondition': [], 'postCondition': [{'asString': 'task(psychomotor-vigilance)', 'name': 'task', 'arity': 1, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'psychomotor-vigilance', 'isa': 'Item'}]}]}
{'isa': 'DescriptionInstruction', 'asString': 'be(letter,in(psychomotor-vigilance))', 'reasoningStep': 0, 'preCondition': [], 'postCondition': [{'asString': 'be(letter,in(psychomotor-vigilance))', 'name': 'be', 'arity': 2, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'letter', 'isa': 'Item'}, {'asString': 'in(psychomotor-vigilance)', 'name': 'in', 'isa': 'Function', 'ofItem': [{'asString': 'psychomotor-vigilance', 'isa': 'Item'}]}]}]}
{'isa': 'DescriptionInstruction', 'asString': 'be(subject,in(psychomotor-vigilance))', 'reasoningStep': 0, 'preCondition': [], 'postCondition': [{'asString': 'be(subject,in(psychomotor-vigilance))', 'name': 'be', 'arity': 2, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'subject', 'isa': 'Item'}, {'asString': 'in(psychomotor-vigilance)', 'name': 'in', 'isa': 'Function', 'ofItem': [{'asString': 'psychomotor-vigilance', 'isa': 'Item'}]}]}]}
{'isa': 'DescriptionInstruction', 'asString': 'press(subject,space_bar)', 'reasoningStep': 0, 'preCondition': [], 'postCondition': [{'asString': 'press(subject,space_bar)', 'name': 'press', 'arity': 2, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'subject', 'isa': 'Item'}, {'asString': 'space_bar', 'isa': 'Item'}]}]}
{'isa': 'DescriptionInstruction', 'asString': 'letter(letter)', 'reasoningStep': 0, 'preCondition': [], 'postCondition': [{'asString': 'letter(letter)', 'name': 'letter', 'arity': 1, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'letter', 'isa': 'Item'}]}]}

get_instruction_reasoner_facts()
{'isa': 'DescriptionInstruction', 'asString': 'appear(letter,on(screen))', 'reasoningStep': 2, 'preCondition': [], 'postCondition': [{'asString': 'appear(letter,on(screen))', 'name': 'appear', 'arity': 2, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'letter', 'isa': 'Item'}, {'asString': 'on(screen)', 'name': 'on', 'isa': 'Function', 'ofItem': [{'asString': 'screen', 'isa': 'Item'}]}]}]}
{'isa': 'DescriptionInstruction', 'asString': 'hasProperty(psychomotor-vigilance,active)', 'reasoningStep': 1, 'preCondition': [], 'postCondition': [{'asString': 'hasProperty(psychomotor-vigilance,active)', 'name': 'hasProperty', 'arity': 2, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'psychomotor-vigilance', 'isa': 'Item'}, {'asString': 'active', 'isa': 'Item'}]}]}

get_instruction_rules()
{'isa': 'ActionInstruction', 'asString': 'be(N,in(A)),task(A),subject(N) => hasProperty(A,active)', 'reasoningStep': 0, 'preCondition': [{'asString': 'subject(N)', 'name': 'subject', 'arity': 1, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'N', 'isa': 'Item'}]}, {'asString': 'be(N,in(A))', 'name': 'be', 'arity': 2, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'N', 'isa': 'Item'}, {'asString': 'in(A)', 'name': 'in', 'isa': 'Function', 'ofItem': [{'asString': 'A', 'isa': 'Item'}]}]}, {'asString': 'task(A)', 'name': 'task', 'arity': 1, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'A', 'isa': 'Item'}]}], 'postCondition': [{'asString': 'hasProperty(A,active)', 'name': 'hasProperty', 'arity': 2, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'A', 'isa': 'Item'}, {'asString': 'active', 'isa': 'Item'}]}]}
{'isa': 'ActionInstruction', 'asString': 'hasProperty(A,active),task(A),screen(C),letter(T) => appear(T,on(C))', 'reasoningStep': 0, 'preCondition': [{'asString': 'screen(C)', 'name': 'screen', 'arity': 1, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'C', 'isa': 'Item'}]}, {'asString': 'letter(T)', 'name': 'letter', 'arity': 1, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'T', 'isa': 'Item'}]}, {'asString': 'task(A)', 'name': 'task', 'arity': 1, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'A', 'isa': 'Item'}]}, {'asString': 'hasProperty(A,active)', 'name': 'hasProperty', 'arity': 2, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'A', 'isa': 'Item'}, {'asString': 'active', 'isa': 'Item'}]}], 'postCondition': [{'asString': 'appear(T,on(C))', 'name': 'appear', 'arity': 2, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'T', 'isa': 'Item'}, {'asString': 'on(C)', 'name': 'on', 'isa': 'Function', 'ofItem': [{'asString': 'C', 'isa': 'Item'}]}]}]}

get_instruction_ground_rules()
{'isa': 'ActionInstruction', 'asString': 'hasProperty(psychomotor-vigilance,active),task(psychomotor-vigilance),screen(screen),letter(letter) => appear(letter,on(screen))', 'reasoningStep': 2, 'preCondition': [{'asString': 'task(psychomotor-vigilance)', 'name': 'task', 'arity': 1, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'psychomotor-vigilance', 'isa': 'Item'}]}, {'asString': 'screen(screen)', 'name': 'screen', 'arity': 1, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'screen', 'isa': 'Item'}]}, {'asString': 'hasProperty(psychomotor-vigilance,active)', 'name': 'hasProperty', 'arity': 2, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'psychomotor-vigilance', 'isa': 'Item'}, {'asString': 'active', 'isa': 'Item'}]}, {'asString': 'letter(letter)', 'name': 'letter', 'arity': 1, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'letter', 'isa': 'Item'}]}], 'postCondition': [{'asString': 'appear(letter,on(screen))', 'name': 'appear', 'arity': 2, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'letter', 'isa': 'Item'}, {'asString': 'on(screen)', 'name': 'on', 'isa': 'Function', 'ofItem': [{'asString': 'screen', 'isa': 'Item'}]}]}]}
{'isa': 'ActionInstruction', 'asString': 'be(subject,in(psychomotor-vigilance)),task(psychomotor-vigilance),subject(subject) => hasProperty(psychomotor-vigilance,active)', 'reasoningStep': 1, 'preCondition': [{'asString': 'be(subject,in(psychomotor-vigilance))', 'name': 'be', 'arity': 2, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'subject', 'isa': 'Item'}, {'asString': 'in(psychomotor-vigilance)', 'name': 'in', 'isa': 'Function', 'ofItem': [{'asString': 'psychomotor-vigilance', 'isa': 'Item'}]}]}, {'asString': 'subject(subject)', 'name': 'subject', 'arity': 1, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'subject', 'isa': 'Item'}]}, {'asString': 'task(psychomotor-vigilance)', 'name': 'task', 'arity': 1, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'psychomotor-vigilance', 'isa': 'Item'}]}], 'postCondition': [{'asString': 'hasProperty(psychomotor-vigilance,active)', 'name': 'hasProperty', 'arity': 2, 'isa': 'ItemDescription', 'ofItem': [{'asString': 'psychomotor-vigilance', 'isa': 'Item'}, {'asString': 'active', 'isa': 'Item'}]}]}

get_DRS_Strings()
   predicate(Q,be,A,P)-6/11
object(A,task,countable,na,eq,1)-1/6
   property(P,active,pos)-6/12
object(E,button,countable,na,eq,1)-3/7
   preposition(U,on,C)-7/10
object(H,space_bar,countable,na,eq,1)-3/4
object(C,screen,countable,na,eq,1)-2/4
   predicate(O,be,N)-6/4
   preposition(O,in,A)-6/5
   object(N,subject,countable,na,eq,1)-6/3
   =>
   predicate(Q,be,A,P)-6/11
   property(P,active,pos)-6/12
predicate(L,be,K)-5/6
predicate(B,be,psychomotor-vigilance,A)-1/4
predicate(M,press,I,H)-8/3
   property(R,active,pos)-7/5
   preposition(O,in,A)-6/5
   predicate(S,be,A,R)-7/4
preposition(L,in,A)-5/7
predicate(G,be,H)-3/9
predicate(J,be,I)-4/6
predicate(D,be,C)-2/6
   predicate(U,appear,T)-7/9
   object(N,subject,countable,na,eq,1)-6/3
preposition(J,in,A)-4/7
preposition(G,in,A)-3/10
   object(T,letter,countable,na,eq,1)-7/8
   predicate(O,be,N)-6/4
preposition(D,in,A)-2/7
object(K,letter,countable,na,eq,1)-5/4
   predicate(S,be,A,R)-7/4
   property(R,active,pos)-7/5
   =>
   predicate(U,appear,T)-7/9
   preposition(U,on,C)-7/10
   object(T,letter,countable,na,eq,1)-7/8
object(I,subject,countable,na,eq,1)-4/4
predicate(F,be,H,E)-3/5

get_DRS_Conditional_Strings()
   predicate(O,be,N)-6/4
   preposition(O,in,A)-6/5
   object(N,subject,countable,na,eq,1)-6/3
   =>
   predicate(Q,be,A,P)-6/11
   property(P,active,pos)-6/12
   predicate(S,be,A,R)-7/4
   property(R,active,pos)-7/5
   =>
   predicate(U,appear,T)-7/9
   preposition(U,on,C)-7/10
   object(T,letter,countable,na,eq,1)-7/8

get_DRS_Fact_Strings()
preposition(J,in,A)-4/7
preposition(G,in,A)-3/10
object(A,task,countable,na,eq,1)-1/6
object(E,button,countable,na,eq,1)-3/7
object(K,letter,countable,na,eq,1)-5/4
preposition(L,in,A)-5/7
object(I,subject,countable,na,eq,1)-4/4
predicate(J,be,I)-4/6
predicate(G,be,H)-3/9
object(H,space_bar,countable,na,eq,1)-3/4
predicate(M,press,I,H)-8/3
object(C,screen,countable,na,eq,1)-2/4
predicate(D,be,C)-2/6
preposition(D,in,A)-2/7
predicate(L,be,K)-5/6
predicate(B,be,psychomotor-vigilance,A)-1/4
predicate(F,be,H,E)-3/5

get_ACE_Strings()
The subject presses the n:space_bar.
If a subject is in the task then the task is active.
p:psychomotor-vigilance is a task.
The n:space_bar is a button and is in the task.
If the task is active then a letter appears on the screen.
There is a screen that is in the task.
There is a subject that is in the task.
There is a letter that is in the task.

getAllTypedDRSInstructions()
{
property:[
{'letter': 'P', 'indent': '   ', 'num1': '6', 'num2': '12', 'arg0': 'pos', 'name': 'active'}
{'letter': 'R', 'indent': '   ', 'num1': '7', 'num2': '5', 'arg0': 'pos', 'name': 'active'}
]
object:[
{'letter': 'C', 'indent': '', 'num1': '2', 'num2': '4', 'arg0': 'countable', 'arg1': 'na', 'arg2': 'eq', 'arg3': '1', 'name': 'screen'}
{'letter': 'A', 'indent': '', 'num1': '1', 'num2': '6', 'arg0': 'countable', 'arg1': 'na', 'arg2': 'eq', 'arg3': '1', 'name': 'task'}
{'letter': 'I', 'indent': '', 'num1': '4', 'num2': '4', 'arg0': 'countable', 'arg1': 'na', 'arg2': 'eq', 'arg3': '1', 'name': 'subject'}
{'letter': 'H', 'indent': '', 'num1': '3', 'num2': '4', 'arg0': 'countable', 'arg1': 'na', 'arg2': 'eq', 'arg3': '1', 'name': 'space_bar'}
{'letter': 'T', 'indent': '   ', 'num1': '7', 'num2': '8', 'arg0': 'countable', 'arg1': 'na', 'arg2': 'eq', 'arg3': '1', 'name': 'letter'}
{'letter': 'E', 'indent': '', 'num1': '3', 'num2': '7', 'arg0': 'countable', 'arg1': 'na', 'arg2': 'eq', 'arg3': '1', 'name': 'button'}
{'letter': 'N', 'indent': '   ', 'num1': '6', 'num2': '3', 'arg0': 'countable', 'arg1': 'na', 'arg2': 'eq', 'arg3': '1', 'name': 'subject'}
{'letter': 'K', 'indent': '', 'num1': '5', 'num2': '4', 'arg0': 'countable', 'arg1': 'na', 'arg2': 'eq', 'arg3': '1', 'name': 'letter'}
]
preposition:[
{'letter': 'U', 'indent': '   ', 'num1': '7', 'num2': '10', 'arg0': 'C', 'name': 'on'}
{'letter': 'L', 'indent': '', 'num1': '5', 'num2': '7', 'arg0': 'A', 'name': 'in'}
{'letter': 'G', 'indent': '', 'num1': '3', 'num2': '10', 'arg0': 'A', 'name': 'in'}
{'letter': 'D', 'indent': '', 'num1': '2', 'num2': '7', 'arg0': 'A', 'name': 'in'}
{'letter': 'O', 'indent': '   ', 'num1': '6', 'num2': '5', 'arg0': 'A', 'name': 'in'}
{'letter': 'J', 'indent': '', 'num1': '4', 'num2': '7', 'arg0': 'A', 'name': 'in'}
]
predicate:[
{'letter': 'S', 'indent': '   ', 'num1': '7', 'num2': '4', 'arg0': 'A', 'arg1': 'R', 'name': 'be'}
{'letter': 'J', 'indent': '', 'num1': '4', 'num2': '6', 'arg0': 'I', 'name': 'be'}
{'letter': 'G', 'indent': '', 'num1': '3', 'num2': '9', 'arg0': 'H', 'name': 'be'}
{'letter': 'Q', 'indent': '   ', 'num1': '6', 'num2': '11', 'arg0': 'A', 'arg1': 'P', 'name': 'be'}
{'letter': 'F', 'indent': '', 'num1': '3', 'num2': '5', 'arg0': 'H', 'arg1': 'E', 'name': 'be'}
{'letter': 'M', 'indent': '', 'num1': '8', 'num2': '3', 'arg0': 'I', 'arg1': 'H', 'name': 'press'}
{'letter': 'D', 'indent': '', 'num1': '2', 'num2': '6', 'arg0': 'C', 'name': 'be'}
{'letter': 'U', 'indent': '   ', 'num1': '7', 'num2': '9', 'arg0': 'T', 'name': 'appear'}
{'letter': 'B', 'indent': '', 'num1': '1', 'num2': '4', 'arg0': 'psychomotor-vigilance', 'arg1': 'A', 'name': 'be'}
{'letter': 'O', 'indent': '   ', 'num1': '6', 'num2': '4', 'arg0': 'N', 'name': 'be'}
{'letter': 'L', 'indent': '', 'num1': '5', 'num2': '6', 'arg0': 'K', 'name': 'be'}
]}

getDRSArgsForComponentType('object')
{'letter': 'C', 'indent': '', 'num1': '2', 'num2': '4', 'arg0': 'countable', 'arg1': 'na', 'arg2': 'eq', 'arg3': '1', 'name': 'screen'}
{'letter': 'A', 'indent': '', 'num1': '1', 'num2': '6', 'arg0': 'countable', 'arg1': 'na', 'arg2': 'eq', 'arg3': '1', 'name': 'task'}
{'letter': 'I', 'indent': '', 'num1': '4', 'num2': '4', 'arg0': 'countable', 'arg1': 'na', 'arg2': 'eq', 'arg3': '1', 'name': 'subject'}
{'letter': 'H', 'indent': '', 'num1': '3', 'num2': '4', 'arg0': 'countable', 'arg1': 'na', 'arg2': 'eq', 'arg3': '1', 'name': 'space_bar'}
{'letter': 'T', 'indent': '   ', 'num1': '7', 'num2': '8', 'arg0': 'countable', 'arg1': 'na', 'arg2': 'eq', 'arg3': '1', 'name': 'letter'}
{'letter': 'E', 'indent': '', 'num1': '3', 'num2': '7', 'arg0': 'countable', 'arg1': 'na', 'arg2': 'eq', 'arg3': '1', 'name': 'button'}
{'letter': 'N', 'indent': '   ', 'num1': '6', 'num2': '3', 'arg0': 'countable', 'arg1': 'na', 'arg2': 'eq', 'arg3': '1', 'name': 'subject'}
{'letter': 'K', 'indent': '', 'num1': '5', 'num2': '4', 'arg0': 'countable', 'arg1': 'na', 'arg2': 'eq', 'arg3': '1', 'name': 'letter'}

getDRSArgsForComponentType('predicate')
{'letter': 'S', 'indent': '   ', 'num1': '7', 'num2': '4', 'arg0': 'A', 'arg1': 'R', 'name': 'be'}
{'letter': 'J', 'indent': '', 'num1': '4', 'num2': '6', 'arg0': 'I', 'name': 'be'}
{'letter': 'G', 'indent': '', 'num1': '3', 'num2': '9', 'arg0': 'H', 'name': 'be'}
{'letter': 'Q', 'indent': '   ', 'num1': '6', 'num2': '11', 'arg0': 'A', 'arg1': 'P', 'name': 'be'}
{'letter': 'F', 'indent': '', 'num1': '3', 'num2': '5', 'arg0': 'H', 'arg1': 'E', 'name': 'be'}
{'letter': 'M', 'indent': '', 'num1': '8', 'num2': '3', 'arg0': 'I', 'arg1': 'H', 'name': 'press'}
{'letter': 'D', 'indent': '', 'num1': '2', 'num2': '6', 'arg0': 'C', 'name': 'be'}
{'letter': 'U', 'indent': '   ', 'num1': '7', 'num2': '9', 'arg0': 'T', 'name': 'appear'}
{'letter': 'B', 'indent': '', 'num1': '1', 'num2': '4', 'arg0': 'psychomotor-vigilance', 'arg1': 'A', 'name': 'be'}
{'letter': 'O', 'indent': '   ', 'num1': '6', 'num2': '4', 'arg0': 'N', 'name': 'be'}
{'letter': 'L', 'indent': '', 'num1': '5', 'num2': '6', 'arg0': 'K', 'name': 'be'}

getDRSArgsForComponentType('preposition')
{'letter': 'U', 'indent': '   ', 'num1': '7', 'num2': '10', 'arg0': 'C', 'name': 'on'}
{'letter': 'L', 'indent': '', 'num1': '5', 'num2': '7', 'arg0': 'A', 'name': 'in'}
{'letter': 'G', 'indent': '', 'num1': '3', 'num2': '10', 'arg0': 'A', 'name': 'in'}
{'letter': 'D', 'indent': '', 'num1': '2', 'num2': '7', 'arg0': 'A', 'name': 'in'}
{'letter': 'O', 'indent': '   ', 'num1': '6', 'num2': '5', 'arg0': 'A', 'name': 'in'}
{'letter': 'J', 'indent': '', 'num1': '4', 'num2': '7', 'arg0': 'A', 'name': 'in'}

getDRSArgsForComponentType('property')
{'letter': 'P', 'indent': '   ', 'num1': '6', 'num2': '12', 'arg0': 'pos', 'name': 'active'}
{'letter': 'R', 'indent': '   ', 'num1': '7', 'num2': '5', 'arg0': 'pos', 'name': 'active'}

getDRSArgsForComponentType('relation')

getInstructionGraphClasses()
Constant
Item
Variable
Function
ItemDescription
Predicate
Instruction
DescriptionInstruction
SituationDescription
PostSituationDescription
TransitionDescription
Fact
Rule
ActionInstruction
PreSituationDescription

getInstructionGraphIndividuals()

getInstructionGraphRoles()
hasName
asString
hasTerm
hasArity
contributesTo
hasCurrentCondition
drsType
drsArgs
asDRSString
hasPostSituationDescription
inReasoningStep
hasPreSituationDescription
prescribes
hasPostSituationDescripton
hasPreSituationDescripton
