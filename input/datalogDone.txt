Database Facts:
task(psychomotor-vigilance)
button(present)
hasProperty(present,positive)
button(absent)
hasProperty(absent,negative)
letter(target)
hasProperty(target,correct)
letter(distractor)
hasProperty(distractor,incorrect)
subject(subject)
screen(screen)
isPartOf(subject,psychomotor-vigilance)
isPartOf(screen,psychomotor-vigilance)

Database Rules:
letter(W) => hasProperty(W,unique)
letter(W) => hasProperty(W,color)
button(C1),task(A) => isPartOf(C1,A)
isPartOf(K,A),subject(K),task(A) => hasProperty(A,active)
letter(W),screen(M),task(A),hasProperty(A,active) => appearsOn(W,M)
hasProperty(W,correct),subject(K),appearsOn(W,M),button(C1),screen(M),letter(W),hasProperty(C1,positive) => press(K,C1)
button(C1),hasProperty(C1,negative),letter(W),screen(M),appearsOn(W,M),letter(W),hasProperty(W,incorrect),subject(K) => press(K,C1)

New Facts:
hasProperty(target,unique)
hasProperty(distractor,unique)
hasProperty(target,color)
hasProperty(distractor,color)
isPartOf(present,psychomotor-vigilance)
isPartOf(absent,psychomotor-vigilance)
hasProperty(psychomotor-vigilance,active)
appearsOn(target,screen)
appearsOn(distractor,screen)
press(subject,present)
press(subject,absent)

New Ground Rules:
letter(target) => hasProperty(target,unique)
letter(distractor) => hasProperty(distractor,unique)
letter(target) => hasProperty(target,color)
letter(distractor) => hasProperty(distractor,color)
button(present),task(psychomotor-vigilance) => isPartOf(present,psychomotor-vigilance)
button(absent),task(psychomotor-vigilance) => isPartOf(absent,psychomotor-vigilance)
isPartOf(subject,psychomotor-vigilance),subject(subject),task(psychomotor-vigilance) => hasProperty(psychomotor-vigilance,active)
letter(target),screen(screen),task(psychomotor-vigilance),hasProperty(psychomotor-vigilance,active) => appearsOn(target,screen)
letter(distractor),screen(screen),task(psychomotor-vigilance),hasProperty(psychomotor-vigilance,active) => appearsOn(distractor,screen)
hasProperty(target,correct),subject(subject),appearsOn(target,screen),button(present),screen(screen),letter(target),hasProperty(present,positive) => press(subject,present)
button(absent),hasProperty(absent,negative),letter(distractor),screen(screen),appearsOn(distractor,screen),letter(distractor),hasProperty(distractor,incorrect),subject(subject) => press(subject,absent)